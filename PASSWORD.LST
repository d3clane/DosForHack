Turbo Assembler	 Version 4.1	    02/27/24 24:05:57	    Page 1
password.asm



      1	0000			     .model tiny
      2	0000			     .code
      3				     .286
      4
      5				     org 100h
      6
      7	      =002B		     HASH_MULTIPLIER equ 43d
      8
      9	0100			     Start:
     10	0100  68 F6FF			 push 63231d	   ; password hash
     11
     12	0103  FC			 cld
     13	0104  33 DB			 xor bx, bx
     14	0106  33 C9			 xor cx, cx
     15
     16	0108  BE 002B			 mov si, HASH_MULTIPLIER
     17	010B  BF 0223r			 mov di, offset	cs:WORD_BUF
     18	010E			     InputLoop:
     19	010E  2E: 83 3E	0233r 00	 cmp cs:LOOP_COUNTER, 0
     20	0114  74 6C			 je EndInput
     21
     22	0116  B4 06			 mov ah, 06h
     23	0118  B2 FF			 mov dl, 0ffh
     24	011A  CD 21			 int 21h	 ; stdin input using 21h
     25	011C  74 F0			 jz InputLoop	 ; no input -> loop
     26
     27	011E  32 E4			 xor ah, ah
     28
     29	0120  50 53 51 52 56 57		 push ax bx cx dx si di
     30	0126  BA 01ECr			 mov dx, offset	cs:STR1
     31	0129  E8 0073			 call Print
     32	012C  5F 5E 5A 59 5B 58		 pop di	si dx cx bx ax
     33
     34	0132  50 53 51 52 56 57		 push ax bx cx dx si di
     35	0138  8B C1			 mov ax, cx
     36	013A  BA 01F9r			 mov dx, offset	cs:STR2
     37	013D  E8 005F			 call Print
     38	0140  5F 5E 5A 59 5B 58		 pop di	si dx cx bx ax
     39
     40	0146  3C 24			 cmp al, '$'	; '$' symbol = end
     41	0148  74 38			 je EndInput
     42
     43	014A  AA			 stosb
     44	014B  8B D8			 mov bx, ax  ; saving ax
     45	014D  8B C1			 mov ax, cx  ; moving prev counted hash	to ax
     46	014F  F7 E6			 mul si	     ; *= 43
     47	0151  03 C3			 add ax, bx  ; pref[i -	1] * 43	+ a[i]
     48	0153  8B C8			 mov cx, ax  ; saving ax in cx
     49
     50	0155  50 53 51 52 56 57		 push ax bx cx dx si di
     51	015B  BA 0206r			 mov dx, offset	cs:STR3
     52	015E  E8 003E			 call Print
     53	0161  5F 5E 5A 59 5B 58		 pop di	si dx cx bx ax
     54
     55	0167  50 53 51 52 56 57		 push ax bx cx dx si di
     56	016D  8B C1			 mov ax, cx
     57	016F  BA 0216r			 mov dx, offset	cs:STR4
Turbo Assembler	 Version 4.1	    02/27/24 24:05:57	    Page 2
password.asm



     58	0172  E8 002A			 call Print
     59	0175  5F 5E 5A 59 5B 58		 pop di	si dx cx bx ax
     60
     61	017B  2E: FF 0E	0233r		 dec cs:LOOP_COUNTER
     62	0180  EB 8C			 jmp InputLoop
     63
     64	0182			     EndInput:
     65	0182  8B C1			 mov ax, cx
     66
     67	0184  5E			 pop si
     68	0185  3B C6			 cmp ax, si
     69	0187  74 0A			 je PassSuccess
     70
     71	0189  B4 09			 mov ah, 09h
     72	018B  BA 01DAr			 mov dx, offset	cs:DENY_STR
     73	018E  CD 21			 int 21h
     74	0190  EB 08 90			 jmp TerminateProgram
     75
     76	0193			     PassSuccess:
     77	0193  B4 09			 mov ah, 09h
     78	0195  BA 01C7r			 mov dx, offset	cs:SUCCESS_STR
     79	0198  CD 21			 int 21h
     80
     81	019A			     TerminateProgram:
     82
     83	019A  B8 4C00			 mov ax, 4c00h
     84	019D  CD 21			 int 21h	 ; terminating program
     85
     86				     ; ax - print, dx -	str
     87	019F			     Print proc
     88	019F  8B D8			 mov bx, ax
     89	01A1  B4 09			 mov ah, 09h
     90	01A3  CD 21			 int 21h
     91	01A5  8B C3			 mov ax, bx
     92
     93	01A7  BB 000A			 mov	 bx,10d		 ;CONST
     94	01AA  33 C9			 xor	 cx,cx		;Reset counter
     95	01AC  33 D2		     .a: xor	 dx,dx		;Setup for division DX:AX / BX
     96	01AE  F7 F3			 div	 bx		; -> AX	is Quotient, Remainder DX=[0,9]
     97	01B0  52			 push	 dx		;(1) Save remainder for	now
     98	01B1  41			 inc	 cx		;One more digit
     99	01B2  85 C0			 test	 ax,ax		;Is quotient zero?
    100	01B4  75 F6			 jnz	 .a		;No, use as next dividend
    101	01B6  5A		     .b: pop	 dx		;(1)
    102	01B7  80 C2 30			 add	 dl,'0'		;Turn into character [0,9] -> ["0","9"]
    103	01BA  B4 02			 mov	 ah,02h		;DOS.DisplayCharacter
    104	01BC  CD 21			 int	 21h		; -> AL
    105	01BE  E2 F6			 loop	 .b
    106	01C0  B2 0A			 mov dl, 0ah
    107	01C2  B4 02			 mov ah, 02h
    108	01C4  CD 21			 int 21h
    109
    110	01C6  C3			 ret
    111	01C7				 endp
    112
    113	01C7  70 65 72 6D 69 73	73+  SUCCESS_STR db 'permission	success$'
    114	      69 6F 6E 20 73 75	63+
Turbo Assembler	 Version 4.1	    02/27/24 24:05:57	    Page 3
password.asm



    115	      63 65 73 73 24
    116	01DA  70 65 72 6D 69 73	73+  DENY_STR	 db 'permission	denied$'
    117	      69 6F 6E 20 64 65	6E+
    118	      69 65 64 24
    119
    120	01EC  52 45 41 44 45 4E	20+  STR1 db 'READEN VAL: $'
    121	      56 41 4C 3A 20 24
    122	01F9  53 41 56 45 44 20	43+  STR2 db 'SAVED CX1	: $'
    123	      58 31 20 3A 20 24
    124	0206  43 41 4C 43 55 4C	41+  STR3 db 'CALCULATED AX: $'
    125	      54 45 44 20 41 58	3A+
    126	      20 24
    127	0216  53 41 56 45 44 20	43+  STR4 db 'SAVED CX2	: $'
    128	      58 32 20 3A 20 24
    129
    130	0223  30 30 30 30 30 30	30+  WORD_BUF	  db '000000000000000$'
    131	      30 30 30 30 30 30	30+
    132	      30 24
    133	0233  0014		     LOOP_COUNTER dw 20d
    134
    135				     end Start
Turbo Assembler	 Version 4.1	    02/27/24 24:05:57	    Page 4
Symbol Table




Symbol Name			  Type	 Value

.A				  Near	 DGROUP:01AC
.B				  Near	 DGROUP:01B6
??DATE				  Text	 "02/27/24"
??FILENAME			  Text	 "password"
??TIME				  Text	 "24:05:57"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0707H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 PASSWORD
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
DENY_STR			  Byte	 DGROUP:01DA
ENDINPUT			  Near	 DGROUP:0182
HASH_MULTIPLIER			  Number 002B
INPUTLOOP			  Near	 DGROUP:010E
LOOP_COUNTER			  Word	 DGROUP:0233
PASSSUCCESS			  Near	 DGROUP:0193
PRINT				  Near	 DGROUP:019F
START				  Near	 DGROUP:0100
STR1				  Byte	 DGROUP:01EC
STR2				  Byte	 DGROUP:01F9
STR3				  Byte	 DGROUP:0206
STR4				  Byte	 DGROUP:0216
SUCCESS_STR			  Byte	 DGROUP:01C7
TERMINATEPROGRAM		  Near	 DGROUP:019A
WORD_BUF			  Byte	 DGROUP:0223

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  0235 Word	  Public  CODE
